$useIEFilters: 0

=placeholder
  &::-webkit-input-placeholder
    @content
  &:-moz-placeholder
    @content
  &::-moz-placeholder
    @content
  &:-ms-input-placeholder
    @content

=background-size($value)
  -webkit-background-size: $value
  background-size: $value

=border-image($path, $offsets, $repeats)
  -moz-border-image: $path $offsets $repeats
  -o-border-image: $path $offsets $repeats
  -webkit-border-image: $path $offsets $repeats
  border-image: $path $offsets $repeats

=border-radius($values)
  -moz-border-radius: $values
  -webkit-border-radius: $values
  border-radius: $values
  -moz-background-clip: padding
  -webkit-background-clip: padding-box
  background-clip: padding-box

=box-shadow($x, $y, $offset, $hex, $ie: $useIEFilters, $inset: null, $spread:null)
  -moz-box-shadow: $x $y $offset $spread $hex $inset
  -webkit-box-shadow: $x $y $offset $spread $hex $inset
  box-shadow: $x $y $offset $spread $hex $inset
  @if $ie == 1
    $iecolor: "#" + red($hex) + green($hex) + blue($hex)
    filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=#{$x}, OffY=#{$y}, Color='#{$iecolor}')
    -ms-filter: quote(progid:DXImageTransform.Microsoft.dropshadow(OffX=#{$x}, OffY=#{$y}, Color='#{$iecolor}'))

=box-sizing($value)
  -moz-box-sizing: $value
  -webkit-box-sizing: $value
  box-sizing: $value

=linear-gradient($from, $to, $ie: $useIEFilters)
  @if $ie != 1
    background-color: $to
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0, $from), color-stop(1, $to))
  background-image: -webkit-linear-gradient(top, $from, $to)
  background-image: -moz-linear-gradient(top, $from, $to)
  background-image: -ms-linear-gradient(top, $from, $to)
  background-image: -o-linear-gradient(top, $from, $to)
  background-image: linear-gradient(top bottom, $from, $to)
  @if $ie == 1
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$from}', endColorstr='#{$to}')
    -ms-filter: quote(progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$from}', endColorstr='#{$to}'))

=rgba-bg($hex, $alpha, $ie: $useIEFilters)
  @if $ie == 1
    background-color: none
    $hexopac: ie-hex-str(rgba($hex, $alpha))
    filter: progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$hexopac}',EndColorStr='#{$hexopac}}')
    -ms-filter: quote(progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$hexopac}',EndColorStr='#{$hexopac}'))
  @else
    background-color: $hex
    background-color: rgba($hex, $alpha)

=perspective($perspective)
  -moz-perspective: $perspective
  -ms-perspective: $perspective
  -webkit-perspective: $perspective
  perspective: $perspective
  -moz-transform-style: preserve-3d
  -ms-transform-style: preserve-3d
  -webkit-transform-style: preserve-3d
  transform-style: preserve-3d

=transform($transforms)
  -moz-transform: $transforms
  -o-transform: $transforms
  -ms-transform: $transforms
  -webkit-transform: $transforms
  transform: $transforms

=matrix($a, $b, $c, $d, $e, $f)
  -moz-transform: matrix($a, $b, $c, $d, #{$e}px, #{$f}px)
  -o-transform: matrix($a, $b, $c, $d, $e, $f)
  -ms-transform: matrix($a, $b, $c, $d, $e, $f)
  -webkit-transform: matrix($a, $b, $c, $d, $e, $f)
  transform: matrix($a, $b, $c, $d, $e, $f)

=rotate($deg)
  +transform(rotate(#{$deg}deg))

=scale($size)
  +transform(scale(#{$size}))

=translate($x, $y)
  +transform(translate($x, $y))

=transition($value)
  -moz-transition: $value
  -o-transition: $value
  -ms-transition: $value
  -webkit-transition: $value
  transition: $value

=font-face($family, $path, $svg, $weight: normal, $style: normal)
  @font-face
    font-family: $family
    src: url('#{$path}.eot')
    src: url('#{$path}.eot?#iefix') format('embedded-opentype'), url('#{$path}.woff') format('woff'), url('#{$path}.ttf') format('truetype'), url('#{$path}.svg##{$svg}') format('svg')
    font-weight: $weight
    font-style: $style
